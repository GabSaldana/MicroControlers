
AVRASM ver. 2.1.30  C:\Users\Gabriela\Documents\Escuela\3er nivel\Microcontroladores\P9\List\teclado.asm Tue Apr 19 10:44:30 2016

C:\Users\Gabriela\Documents\Escuela\3er nivel\Microcontroladores\P9\List\teclado.asm(1015): warning: Register r4 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : AT90LS8535
                 ;Program type             : Application
                 ;Clock frequency          : 1.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 128 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Smart register allocation     : Off
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME AT90LS8535
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 607
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x025F
                 	.EQU __DSTACK_SIZE=0x0080
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOV  R30,R28
                 	MOV  R31,R29
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOV  R30,R28
                 	MOV  R31,R29
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOV  R30,R28
                 	MOV  R31,R29
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOV  R30,R28
                 	MOV  R31,R29
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOV  R30,R0
                 	MOV  R31,R1
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOV  R26,R28
                 	MOV  R27,R29
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOV  R26,R28
                 	MOV  R27,R29
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOV  R26,R28
                 	MOV  R27,R29
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOV  R26,R0
                 	MOV  R27,R1
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOV  R30,R28
                 	MOV  R31,R29
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOV  R30,R28
                 	MOV  R31,R29
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOV  R26,R28
                 	MOV  R27,R29
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOV  R26,R28
                 	MOV  R27,R29
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOV  R30,R28
                 	MOV  R31,R29
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOV  R26,R28
                 	MOV  R27,R29
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOV  R26,R28
                 	MOV  R27,R29
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOV  R26,R28
                 	MOV  R27,R29
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOV  R26,R28
                 	MOV  R27,R29
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOV  R26,R28
                 	MOV  R27,R29
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOV  R30,R28
                 	MOV  R31,R29
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOV  R30,R28
                 	MOV  R31,R29
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOV  R30,R28
                 	MOV  R31,R29
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOV  R30,R28
                 	MOV  R31,R29
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOV  R30,R28
                 	MOV  R31,R29
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOV  R26,R28
                 	MOV  R27,R29
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOV  R26,R28
                 	MOV  R27,R29
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOV  R26,R28
                 	MOV  R27,R29
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _con=R4
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c019      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
                 
                 _0x3:
000011 063f
000012 4f5b
000013 6d66
000014 077c      	.DB  0x3F,0x6,0x5B,0x4F,0x66,0x6D,0x7C,0x7
000015 6f7f      	.DB  0x7F,0x6F
                 
                 __GLOBAL_INI_TBL:
000016 000a      	.DW  0x0A
000017 00e0      	.DW  _tab7seg
000018 0022      	.DW  _0x3*2
                 
                 _0xFFFFFFFF:
000019 0000      	.DW  0
                 
                 __RESET:
00001a 94f8      	CLI
00001b 27ee      	CLR  R30
00001c bbec      	OUT  EECR,R30
00001d bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
00001e e1f8      	LDI  R31,0x18
00001f bdf1      	OUT  WDTCR,R31
000020 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000021 e08d      	LDI  R24,(14-2)+1
000022 e0a2      	LDI  R26,2
000023 27bb      	CLR  R27
                 __CLEAR_REG:
000024 93ed      	ST   X+,R30
000025 958a      	DEC  R24
000026 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000027 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000028 e092      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000029 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00002a 93ed      	ST   X+,R30
00002b 9701      	SBIW R24,1
00002c f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00002d e2ec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00002e e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00002f 95c8      	LPM
000030 9631      	ADIW R30,1
000031 2d80      	MOV  R24,R0
000032 95c8      	LPM
000033 9631      	ADIW R30,1
000034 2d90      	MOV  R25,R0
000035 9700      	SBIW R24,0
000036 f0b9      	BREQ __GLOBAL_INI_END
000037 95c8      	LPM
000038 9631      	ADIW R30,1
000039 2da0      	MOV  R26,R0
00003a 95c8      	LPM
00003b 9631      	ADIW R30,1
00003c 2db0      	MOV  R27,R0
00003d 95c8      	LPM
00003e 9631      	ADIW R30,1
00003f 2c10      	MOV  R1,R0
000040 95c8      	LPM
000041 9631      	ADIW R30,1
000042 2f6e      	MOV  R22,R30
000043 2f7f      	MOV  R23,R31
000044 2df0      	MOV  R31,R0
000045 2de1      	MOV  R30,R1
                 __GLOBAL_INI_LOOP:
000046 95c8      	LPM
000047 9631      	ADIW R30,1
000048 920d      	ST   X+,R0
000049 9701      	SBIW R24,1
00004a f7d9      	BRNE __GLOBAL_INI_LOOP
00004b 2fe6      	MOV  R30,R22
00004c 2ff7      	MOV  R31,R23
00004d cfe1      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00004e e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00004f bfed      	OUT  SPL,R30
000050 e0e2      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000051 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000052 eec0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000053 e0d0      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000054 c000      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0xE0
                 
                 	.CSEG
                 ;#include <mega8535.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;
                 ;
                 ;const char tab7seg [10]={0x3F,0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7c, 0x07, 0x7f, 0x6f};
                 
                 	.DSEG
                 ;
                 ;#define S0 PORTB.0
                 ;#define S1 PORTB.1
                 ;#define S2 PORTB.2
                 ;
                 ;#define E0 PINB.4
                 ;#define E1 PINB.5
                 ;#define E2 PINB.6
                 ;
                 ;unsigned char con;
                 ;
                 ;void main(void)
                 ; 0000 0012 {
                 
                 	.CSEG
                 _main:
                 ; 0000 0013 
                 ; 0000 0014 PORTA=0x00;
000055 e0e0      	LDI  R30,LOW(0)
000056 bbeb      	OUT  0x1B,R30
                 ; 0000 0015 DDRA=0x00;
000057 bbea      	OUT  0x1A,R30
                 ; 0000 0016 PORTD=0x00;
000058 bbe2      	OUT  0x12,R30
                 ; 0000 0017 DDRD=0x00;
000059 bbe1      	OUT  0x11,R30
                 ; 0000 0018 
                 ; 0000 0019 DDRC=0xFF;//salida hacia el DISPLAY
00005a efef      	LDI  R30,LOW(255)
00005b bbe4      	OUT  0x14,R30
                 ; 0000 001A PORTC=0x00;
00005c e0e0      	LDI  R30,LOW(0)
00005d bbe5      	OUT  0x15,R30
                 ; 0000 001B 
                 ; 0000 001C DDRB=0x0F;//mitad entrada/salida  TECLADO
00005e e0ef      	LDI  R30,LOW(15)
00005f bbe7      	OUT  0x17,R30
                 ; 0000 001D PORTB=0xFF;//unos a la salida del teclado/con pull up a la entrada del teclado
000060 efef      	LDI  R30,LOW(255)
000061 bbe8      	OUT  0x18,R30
                 ; 0000 001E 
                 ; 0000 001F TCCR0=0x00;
000062 e0e0      	LDI  R30,LOW(0)
000063 bfe3      	OUT  0x33,R30
                 ; 0000 0020 TCNT0=0x00;
000064 bfe2      	OUT  0x32,R30
                 ; 0000 0021 TCCR1A=0x00;
000065 bdef      	OUT  0x2F,R30
                 ; 0000 0022 TCCR1B=0x00;
000066 bdee      	OUT  0x2E,R30
                 ; 0000 0023 TCNT1H=0x00;
000067 bded      	OUT  0x2D,R30
                 ; 0000 0024 TCNT1L=0x00;
000068 bdec      	OUT  0x2C,R30
                 ; 0000 0025 OCR1AH=0x00;
000069 bdeb      	OUT  0x2B,R30
                 ; 0000 0026 OCR1AL=0x00;
00006a bdea      	OUT  0x2A,R30
                 ; 0000 0027 OCR1BH=0x00;
00006b bde9      	OUT  0x29,R30
                 ; 0000 0028 OCR1BL=0x00;
00006c bde8      	OUT  0x28,R30
                 ; 0000 0029 ASSR=0x00;
00006d bde2      	OUT  0x22,R30
                 ; 0000 002A TCCR2=0x00;
00006e bde5      	OUT  0x25,R30
                 ; 0000 002B TCNT2=0x00;
00006f bde4      	OUT  0x24,R30
                 ; 0000 002C OCR2=0x00;
000070 bde3      	OUT  0x23,R30
                 ; 0000 002D GIMSK=0x00;
000071 bfeb      	OUT  0x3B,R30
                 ; 0000 002E MCUCR=0x00;
000072 bfe5      	OUT  0x35,R30
                 ; 0000 002F TIMSK=0x00;
000073 bfe9      	OUT  0x39,R30
                 ; 0000 0030 ACSR=0x80;
000074 e8e0      	LDI  R30,LOW(128)
000075 b9e8      	OUT  0x8,R30
                 ; 0000 0031 ADCSR=0x00;
000076 e0e0      	LDI  R30,LOW(0)
000077 b9e6      	OUT  0x6,R30
                 ; 0000 0032 SPCR=0x00;
000078 b9ed      	OUT  0xD,R30
                 ; 0000 0033 
                 ; 0000 0034 while (1)
                 _0x4:
                 ; 0000 0035       {
                 ; 0000 0036 
                 ; 0000 0037         con=0;
000079 d085      	RCALL SUBOPT_0x0
                 ; 0000 0038         delay_ms(40);
                 ; 0000 0039         S0=0;//col 0
00007a 98c0      	CBI  0x18,0
                 ; 0000 003A         S1=1;//col 1
00007b 9ac1      	SBI  0x18,1
                 ; 0000 003B         S2=1;//col 2
00007c d088      	RCALL SUBOPT_0x1
                 ; 0000 003C 
                 ; 0000 003D         if(E0 == 0 && E1 == 1 && E2 == 1)
00007d f421      	BRNE _0xE
00007e 9bb5      	SBIS 0x16,5
00007f c002      	RJMP _0xE
000080 99b6      	SBIC 0x16,6
000081 c001      	RJMP _0xF
                 _0xE:
000082 c003      	RJMP _0xD
                 _0xF:
                 ; 0000 003E             PORTC= tab7seg[1];
                +
000083 91e0 00e1+LDS R30 , _tab7seg + ( 1 )
                 	__GETB1MN _tab7seg,1
000085 bbe5      	OUT  0x15,R30
                 ; 0000 003F             //PORTC= ~tab7seg[1];
                 ; 0000 0040         if(E0 == 1 && E1 == 0 && E2 == 1)
                 _0xD:
000086 9bb4      	SBIS 0x16,4
000087 c004      	RJMP _0x11
000088 d082      	RCALL SUBOPT_0x2
000089 f411      	BRNE _0x11
00008a 99b6      	SBIC 0x16,6
00008b c001      	RJMP _0x12
                 _0x11:
00008c c003      	RJMP _0x10
                 _0x12:
                 ; 0000 0041             PORTC= tab7seg[2];
                +
00008d 91e0 00e2+LDS R30 , _tab7seg + ( 2 )
                 	__GETB1MN _tab7seg,2
00008f bbe5      	OUT  0x15,R30
                 ; 0000 0042             //PORTC= ~tab7seg[2];
                 ; 0000 0043         if(E0 == 1 && E1 == 1 && E2 == 0)
                 _0x10:
000090 9bb4      	SBIS 0x16,4
000091 c004      	RJMP _0x14
000092 9bb5      	SBIS 0x16,5
000093 c002      	RJMP _0x14
000094 d07b      	RCALL SUBOPT_0x3
000095 f009      	BREQ _0x15
                 _0x14:
000096 c003      	RJMP _0x13
                 _0x15:
                 ; 0000 0044             PORTC= tab7seg[3];
                +
000097 91e0 00e3+LDS R30 , _tab7seg + ( 3 )
                 	__GETB1MN _tab7seg,3
000099 bbe5      	OUT  0x15,R30
                 ; 0000 0045             //PORTC= ~tab7seg[3];
                 ; 0000 0046         if(E0 == 1 && E1 == 1 && E2 == 1)
                 _0x13:
00009a 9bb4      	SBIS 0x16,4
00009b c004      	RJMP _0x17
00009c 9bb5      	SBIS 0x16,5
00009d c002      	RJMP _0x17
00009e 99b6      	SBIC 0x16,6
00009f c001      	RJMP _0x18
                 _0x17:
0000a0 c001      	RJMP _0x16
                 _0x18:
                 ; 0000 0047             con++;
0000a1 9443      	INC  R4
                 ; 0000 0048         delay_ms(40);
                 _0x16:
0000a2 d072      	RCALL SUBOPT_0x4
                 ; 0000 0049 
                 ; 0000 004A 
                 ; 0000 004B         con=0;
                 ; 0000 004C         delay_ms(40);
                 ; 0000 004D         S0=1;//col 0
0000a3 9ac0      	SBI  0x18,0
                 ; 0000 004E         S1=0;//col 1
0000a4 98c1      	CBI  0x18,1
                 ; 0000 004F         S2=1;//col 2
0000a5 d05f      	RCALL SUBOPT_0x1
                 ; 0000 0050 
                 ; 0000 0051         if(E0 == 0 && E1 == 1 && E2 == 1)
0000a6 f421      	BRNE _0x20
0000a7 9bb5      	SBIS 0x16,5
0000a8 c002      	RJMP _0x20
0000a9 99b6      	SBIC 0x16,6
0000aa c001      	RJMP _0x21
                 _0x20:
0000ab c003      	RJMP _0x1F
                 _0x21:
                 ; 0000 0052             PORTC= tab7seg[4];
                +
0000ac 91e0 00e4+LDS R30 , _tab7seg + ( 4 )
                 	__GETB1MN _tab7seg,4
0000ae bbe5      	OUT  0x15,R30
                 ; 0000 0053             //PORTC= ~tab7seg[4];
                 ; 0000 0054         if(E0 == 1 && E1 == 0 && E2 == 1)
                 _0x1F:
0000af 9bb4      	SBIS 0x16,4
0000b0 c004      	RJMP _0x23
0000b1 d059      	RCALL SUBOPT_0x2
0000b2 f411      	BRNE _0x23
0000b3 99b6      	SBIC 0x16,6
0000b4 c001      	RJMP _0x24
                 _0x23:
0000b5 c003      	RJMP _0x22
                 _0x24:
                 ; 0000 0055             PORTC= tab7seg[5];
                +
0000b6 91e0 00e5+LDS R30 , _tab7seg + ( 5 )
                 	__GETB1MN _tab7seg,5
0000b8 bbe5      	OUT  0x15,R30
                 ; 0000 0056             //PORTC= ~tab7seg[5];
                 ; 0000 0057         if(E0 == 1 && E1 == 1 && E2 == 0)
                 _0x22:
0000b9 9bb4      	SBIS 0x16,4
0000ba c004      	RJMP _0x26
0000bb 9bb5      	SBIS 0x16,5
0000bc c002      	RJMP _0x26
0000bd d052      	RCALL SUBOPT_0x3
0000be f009      	BREQ _0x27
                 _0x26:
0000bf c003      	RJMP _0x25
                 _0x27:
                 ; 0000 0058             PORTC= tab7seg[6];
                +
0000c0 91e0 00e6+LDS R30 , _tab7seg + ( 6 )
                 	__GETB1MN _tab7seg,6
0000c2 bbe5      	OUT  0x15,R30
                 ; 0000 0059             //PORTC= ~tab7seg[6];
                 ; 0000 005A         if(E0 == 1 && E1 == 1 && E2 == 1)
                 _0x25:
0000c3 9bb4      	SBIS 0x16,4
0000c4 c004      	RJMP _0x29
0000c5 9bb5      	SBIS 0x16,5
0000c6 c002      	RJMP _0x29
0000c7 99b6      	SBIC 0x16,6
0000c8 c001      	RJMP _0x2A
                 _0x29:
0000c9 c001      	RJMP _0x28
                 _0x2A:
                 ; 0000 005B             con++;
0000ca 9443      	INC  R4
                 ; 0000 005C         delay_ms(40);
                 _0x28:
0000cb d049      	RCALL SUBOPT_0x4
                 ; 0000 005D 
                 ; 0000 005E 
                 ; 0000 005F         con=0;
                 ; 0000 0060         delay_ms(40);
                 ; 0000 0061         S0=1;//col 0
0000cc 9ac0      	SBI  0x18,0
                 ; 0000 0062         S1=1;//col 1
0000cd 9ac1      	SBI  0x18,1
                 ; 0000 0063         S2=0;//col 2
0000ce 98c2      	CBI  0x18,2
                 ; 0000 0064 
                 ; 0000 0065         if(E0 == 0 && E1 == 1 && E2 == 1)
0000cf e0a0      	LDI  R26,0
0000d0 99b4      	SBIC 0x16,4
0000d1 e0a1      	LDI  R26,1
0000d2 30a0      	CPI  R26,LOW(0x0)
0000d3 f421      	BRNE _0x32
0000d4 9bb5      	SBIS 0x16,5
0000d5 c002      	RJMP _0x32
0000d6 99b6      	SBIC 0x16,6
0000d7 c001      	RJMP _0x33
                 _0x32:
0000d8 c003      	RJMP _0x31
                 _0x33:
                 ; 0000 0066             PORTC= tab7seg[7];
                +
0000d9 91e0 00e7+LDS R30 , _tab7seg + ( 7 )
                 	__GETB1MN _tab7seg,7
0000db bbe5      	OUT  0x15,R30
                 ; 0000 0067             //PORTC= ~tab7seg[7];
                 ; 0000 0068         if(E0 == 1 && E1 == 0 && E2 == 1)
                 _0x31:
0000dc 9bb4      	SBIS 0x16,4
0000dd c004      	RJMP _0x35
0000de d02c      	RCALL SUBOPT_0x2
0000df f411      	BRNE _0x35
0000e0 99b6      	SBIC 0x16,6
0000e1 c001      	RJMP _0x36
                 _0x35:
0000e2 c003      	RJMP _0x34
                 _0x36:
                 ; 0000 0069             PORTC= tab7seg[8];
                +
0000e3 91e0 00e8+LDS R30 , _tab7seg + ( 8 )
                 	__GETB1MN _tab7seg,8
0000e5 bbe5      	OUT  0x15,R30
                 ; 0000 006A             //PORTC= ~tab7seg[8];
                 ; 0000 006B         if(E0 == 1 && E1 == 1 && E2 == 0)
                 _0x34:
0000e6 9bb4      	SBIS 0x16,4
0000e7 c004      	RJMP _0x38
0000e8 9bb5      	SBIS 0x16,5
0000e9 c002      	RJMP _0x38
0000ea d025      	RCALL SUBOPT_0x3
0000eb f009      	BREQ _0x39
                 _0x38:
0000ec c003      	RJMP _0x37
                 _0x39:
                 ; 0000 006C             PORTC= tab7seg[9];
                +
0000ed 91e0 00e9+LDS R30 , _tab7seg + ( 9 )
                 	__GETB1MN _tab7seg,9
0000ef bbe5      	OUT  0x15,R30
                 ; 0000 006D             //PORTC= ~tab7seg[9];
                 ; 0000 006E         if(E0 == 1 && E1 == 1 && E2 == 1)
                 _0x37:
0000f0 9bb4      	SBIS 0x16,4
0000f1 c004      	RJMP _0x3B
0000f2 9bb5      	SBIS 0x16,5
0000f3 c002      	RJMP _0x3B
0000f4 99b6      	SBIC 0x16,6
0000f5 c001      	RJMP _0x3C
                 _0x3B:
0000f6 c001      	RJMP _0x3A
                 _0x3C:
                 ; 0000 006F             con++;
0000f7 9443      	INC  R4
                 ; 0000 0070         delay_ms(40);
                 _0x3A:
0000f8 e2e8      	LDI  R30,LOW(40)
0000f9 e0f0      	LDI  R31,HIGH(40)
0000fa 93fa      	ST   -Y,R31
0000fb 93ea      	ST   -Y,R30
0000fc d01e      	RCALL _delay_ms
                 ; 0000 0071       }
0000fd cf7b      	RJMP _0x4
                 ; 0000 0072 }
                 _0x3D:
0000fe cfff      	RJMP _0x3D
                 
                 	.DSEG
                 _tab7seg:
0000e0           	.BYTE 0xA
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x0:
0000ff 2444      	CLR  R4
000100 e2e8      	LDI  R30,LOW(40)
000101 e0f0      	LDI  R31,HIGH(40)
000102 93fa      	ST   -Y,R31
000103 93ea      	ST   -Y,R30
000104 c016      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000105 9ac2      	SBI  0x18,2
000106 e0a0      	LDI  R26,0
000107 99b4      	SBIC 0x16,4
000108 e0a1      	LDI  R26,1
000109 30a0      	CPI  R26,LOW(0x0)
00010a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2:
00010b e0a0      	LDI  R26,0
00010c 99b5      	SBIC 0x16,5
00010d e0a1      	LDI  R26,1
00010e 30a0      	CPI  R26,LOW(0x0)
00010f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3:
000110 e0a0      	LDI  R26,0
000111 99b6      	SBIC 0x16,6
000112 e0a1      	LDI  R26,1
000113 30a0      	CPI  R26,LOW(0x0)
000114 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
000115 e2e8      	LDI  R30,LOW(40)
000116 e0f0      	LDI  R31,HIGH(40)
000117 93fa      	ST   -Y,R31
000118 93ea      	ST   -Y,R30
000119 d001      	RCALL _delay_ms
00011a cfe4      	RJMP SUBOPT_0x0
                 
                 
                 	.CSEG
                 _delay_ms:
00011b 91e9      	ld   r30,y+
00011c 91f9      	ld   r31,y+
00011d 9630      	adiw r30,0
00011e f039      	breq __delay_ms1
                 __delay_ms0:
                +
00011f ef8a     +LDI R24 , LOW ( 0xFA )
000120 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
000121 9701     +SBIW R24 , 1
000122 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
000123 95a8      	wdr
000124 9731      	sbiw r30,1
000125 f7c9      	brne __delay_ms0
                 __delay_ms1:
000126 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

AT90LS8535 register use summary:
r0 :   7 r1 :   2 r2 :   0 r3 :   0 r4 :   4 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:   0 r18:   0 r19:   0 r20:   0 r21:   0 r22:   2 r23:   2 
r24:   9 r25:   3 r26:  15 r27:   2 r28:   1 r29:   1 r30:  84 r31:  13 
x  :   3 y  :   8 z  :   0 
Registers used: 15 out of 35 (42.9%)

AT90LS8535 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   0 
adiw  :   8 and   :   0 andi  :   0 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   5 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   0 brmi  :   0 brne  :  11 brpl  :   0 brsh  :   0 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 cbi   :   3 
cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 clr   :   3 
cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 cp    :   0 
cpc   :   0 cpi   :   4 cpse  :   0 dec   :   1 des   :   0 eor   :   0 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :   0 
inc   :   3 ld    :   2 ldd   :   0 ldi   :  36 lds   :   9 lpm   :  21 
lsl   :   0 lsr   :   0 mov   :  11 movw  :   0 mul   :   0 muls  :   0 
mulsu :   0 neg   :   0 nop   :   0 or    :   0 ori   :   0 out   :  43 
pop   :   0 push  :   0 rcall :  13 ret   :   4 reti  :   0 rjmp  :  62 
rol   :   0 ror   :   0 sbc   :   0 sbci  :   0 sbi   :   5 sbic  :  13 
sbis  :  18 sbiw  :   5 sbr   :   0 sbrc  :   0 sbrs  :   0 sec   :   0 
seh   :   0 sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   0 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :   9 std   :   0 
sts   :   0 sub   :   0 subi  :   0 swap  :   0 tst   :   0 wdr   :   1 

Instructions used: 24 out of 114 (21.1%)

AT90LS8535 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00024e    572     18    590    8192   7.2%
[.dseg] 0x000060 0x0000ea      0     10     10     607   1.6%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 1 warnings
